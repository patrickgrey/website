---
title: "Import maps"
layout: base
cssFiles: ["./css/index.css"]
jsFiles: ["./js/index.js"]
jsImports: [{name: "module1", path: "./js/packages/module1.js"},{name: "module2", path: "./js/packages/module2.js"}]
tags: ["learning", "javascript"]
publish: 2025-02-16T17:22:00.000Z
---
{# <article>

    <div class="pg-column-main flow">

        <h1>{{title}}</h1>

        <p>Today I want to try using import maps. The end goal is to be able to remove Vite from my build process and simplify things. Reducing dependencies is always satisfying to me.</p>

        <p>Bonus extra task is to see if I can integrate a JavaScript package from NPM or UNPKG.</p>

        <p>What are Import Maps? <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap">Mozzilla gives us some detail</a>.</p>

        <p>I've had trouble using them at work, I think mainly due to problems with relative paths but also the error messages you get aren't that helpful i.e. I keep getting <code>Uncaught TypeError: Failed to resolve module specifier "module1". Relative references must start with either "/", "./", or "../".</code></p>

        <h2>Plan</h2>

        <ol>
            <li>Get one JS file to load another simple one.</li>
            <li>Make a loading chain</li>
            <li>Call one file from multiple other files</li>
            <li>Call a package</li>
        </ol>

        <div data-notepad class="pg-notepad"></div>

        <h2>Fails</h2>
        <p>Here is my initial setup that didn't work.</p>
        <p>
            {% highlight "html" %}
<script type="module" src="./js/index.js"></script>
<script type="importmap">
    {
        "imports": {
            "module1": "./js/packages/module1.js"
        }
    }
</script>
            {% endhighlight %}
        </p>

        <p>I take the relative URL from the index page. This results in the error noted above.</p>

        <p>
            {% highlight "html" %}
<script type="module" src="./js/index.js"></script>
<script type="importmap">
    {
        "imports": {
            "module1": "./packages/module1.js"
        }
    }
</script>
            {% endhighlight %}
        </p>

        <p>I take the relative URL from the javascript file. This still results in the error noted above.</p>

        <p><strong>What I was doing wrong</strong> was loading my script before the import map is created. Seems obvious now ðŸ˜…. Links are relative to the HTML page. Now the scripts load as expected.</p>

        <p>So, this works:
                        {% highlight "html" %}
<script type="importmap">
    {
        "imports": {
            "module1": "./js/packages/module1.js"
        }
    }
</script>
<script type="module" src="./js/index.js"></script>
            {% endhighlight %}
        </p>

        <p>I want to be able to develop offline (the joys of wifi in rural Scotland). UNPKG seems a good start but not for all the files I need if offline. I need to investigate further and will update this post if I get anywhere.</p>

        <p>I found this article very useful: <a href="https://www.honeybadger.io/blog/import-maps/" target="_blank">https://www.honeybadger.io/blog/import-maps/</a></p>

        <!-- https://www.honeybadger.io/blog/import-maps/ -->

    </div>

</article> #}

